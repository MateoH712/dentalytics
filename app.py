# -*- coding: utf-8 -*-
"""Despliegue_dentalytics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W3iASrK-3-VHllahkrbSlMaY1LaZ9BLo
"""

#Importamos librerías básicas
import pandas as pd # manipulacion dataframes
import numpy as np  # matrices y vectores
import matplotlib.pyplot as plt #gráfica

#Cargamos el modelo
import pickle
filename = 'modelo.pkl'

modelTree,modelKnn, modelNN, modelSVM, labelencoder,variables,min_max_scaler = pickle.load(open(filename, 'rb'))

#Cargamos los datos futuros
#data = pd.read_excel("Clientes_dentalyticsfuturos.xlsx")
#data.head()

#Se realiza la preparación
data_preparada=data.copy()

data_preparada = pd.get_dummies(data_preparada, columns=['Canal preferido'], drop_first=False)
data_preparada = pd.get_dummies(data_preparada, columns=['Cat preferida'], drop_first=False) #En despliegue no se borran dummies
data_preparada.head()

#Se adicionan las columnas faltantes
data_preparada=data_preparada.reindex(columns=variables,fill_value=0)
data_preparada.head()

#hacemos la prediccion con el tree
Y_fut =modelTree.predict(data_preparada)
print(Y_fut)

data['Tree']=labelencoder.inverse_transform(Y_fut)
data.head()

data_preparada[['Ticket promedio']]=min_max_scaler.transform(data_preparada[['Ticket promedio']])
data_preparada.head()

#Hacemos la predicción con Knn
Y_fut = modelKnn.predict(data_preparada)
data['Knn']=labelencoder.inverse_transform(Y_fut)
data.head()

#Hacemos la predicción con Red Neuronal
Y_fut = modelNN.predict(data_preparada)
data['Neural_Network']=labelencoder.inverse_transform(Y_fut)
data.head()

#Hacemos la predicción con SVM
Y_fut = modelSVM.predict(data_preparada)
data['SVM']=labelencoder.inverse_transform(Y_fut)
data

#Se crea interfaz gráfica con streamlit para captura de los datos

import streamlit as st

st.title('Prediccion tipo de cliente Rapident')
Canal preferido = st.selectbox('Canal preferido', ['Ventas digitales', 'Punto de venta'])
Ticket promedio = st.number_input('Ticket promedio', min_value=14, max_value=52, value=20, step=1)
Acrilicos y flexibles = st.selectbox('Acrilicos y flexibles', ['0', '1'])
Blanqueamientos y profilaxis = st.selectbox('Blanqueamientos y profilaxis', ['0', '1'])
Dientes = st.selectbox('Dientes', ['0', '1'])
Equipos y accesorios = st.selectbox('equipos y accesorios', ['0', '1'])
Higiene diaria = st.selectbox('higiene diaria', ['0', '1'])
Impresiones y vaciado = st.selectbox('impresiones y vaciado', ['0', '1'])
Instrumental e insumos = st.selectbox('instrumental e insumos', ['0', '1'])
Ortodoncia = st.selectbox('ortodoncia', ['0', '1'])
Restauracion = st.selectbox('Restauracion', ['0', '1'])
Laboratorio = st.selectbox('Laboratorio', ['0', '1'])
discos y pulidos = st.selectbox('discos y pulidos', ['0', '1'])
Desechables y desinfeccion = st.selectbox('Desechables y desinfeccion', ['0', '1'])
Especializacion = st.slider('Especializacion', min_value=0.15 , max_value=1, value=0.5, step=0.01)
Cat preferida = st.selectbox('Cat preferida', ['Acrilicos y flexibles', 'blanqueamientos y profilaxis', 'Dientes', 'equipos y accesorios', 'higiene diaria','impresiones y vaciado','instrumental e insumos','ortodoncia','restauracion','laboratorio','discos y pulidos','desechables y desinfeccion'])

#dataframe
datos =[[Canal preferido,Ticket promedio,Acrilicos y flexibles, Blanqueamientos y profilaxis, Dientes, Equipos y accesorios, Higiene diaria, Impresiones y vaciado,Instrumental e insumos,Ortodoncia, Restauracion,Laboratorio, discos y pulidos,Desechables y desinfeccion, Especializacion, Cat preferida]]
data = pd.DataFrame(datos, columns=['Canal preferido','Ticket promedio,Acrilicos y flexibles', 'Blanqueamientos y profilaxis', 'Dientes', 'Equipos y accesorios', 'Higiene diaria', 'Impresiones y vaciado', 'Instrumental e insumos', 'Ortodoncia', 'Restauracion', 'Laboratorio', 'discos y pulidos', 'Desechables y desinfeccion' , 'Especializacion', 'Cat preferida'])

